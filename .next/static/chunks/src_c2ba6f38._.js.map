{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/services/reconService.ts"],"sourcesContent":["import { ReconResult, ScanOptions, ToolConfig } from '@/types/recon'\n\nconst toolConfigs: Record<string, ToolConfig> = {\n  nmap: {\n    name: 'Nmap',\n    command: 'nmap',\n    args: ['-sV', '-sC'],\n    description: 'Network scanning and service detection',\n    category: 'network'\n  },\n  dirsearch: {\n    name: 'Dirsearch',\n    command: 'dirsearch',\n    args: ['-e', 'php,html,js'],\n    description: 'Web path scanner',\n    category: 'webapp'\n  },\n  sslscan: {\n    name: 'SSLScan',\n    command: 'sslscan',\n    args: ['--no-colour'],\n    description: 'SSL/TLS scanner',\n    category: 'crypto'\n  },\n  theHarvester: {\n    name: 'TheHarvester',\n    command: 'theHarvester',\n    args: ['-b', 'all'],\n    description: 'Email and subdomain harvester',\n    category: 'osint'\n  },\n  aircrackng: {\n    name: 'Aircrack-ng',\n    command: 'aircrack-ng',\n    args: [],\n    description: 'Wireless network analyzer',\n    category: 'wireless'\n  },\n  awsEnum: {\n    name: 'AWS Enumerator',\n    command: 'aws',\n    args: ['--list-buckets'],\n    description: 'AWS infrastructure scanner',\n    category: 'infrastructure'\n  }\n}\n\nexport async function executeReconTool(\n  toolName: string,\n  options: ScanOptions\n): Promise<ReconResult> {\n  const config = toolConfigs[toolName]\n  if (!config) {\n    throw new Error(`Tool ${toolName} not found`)\n  }\n\n  try {\n    // Validate target and options\n    if (!await validateTarget(options.target)) {\n      throw new Error('Invalid target specified')\n    }\n\n    // In a real implementation, this would execute the actual command\n    // For demo purposes, we'll simulate the execution with tool-specific responses\n    const result: ReconResult = {\n      status: 'completed',\n      output: await simulateToolOutput(config, options),\n      timestamp: new Date().toISOString()\n    }\n\n    return result\n  } catch (error) {\n    return {\n      status: 'error',\n      output: error instanceof Error ? error.message : 'Unknown error occurred',\n      timestamp: new Date().toISOString()\n    }\n  }\n}\n\nasync function simulateToolOutput(config: ToolConfig, options: ScanOptions): Promise<string> {\n  const baseOutput = `Running ${config.name} scan on ${options.target}\\n` +\n                    `Command: ${config.command} ${config.args.join(' ')} ${options.target}\\n\\n`\n\n  // Simulate different outputs based on tool category\n  switch (config.category) {\n    case 'network':\n      return baseOutput + \n        'PORT     STATE    SERVICE       VERSION\\n' +\n        '22/tcp   open     ssh           OpenSSH 8.2p1\\n' +\n        '80/tcp   open     http          nginx 1.18.0\\n' +\n        '443/tcp  open     https         nginx 1.18.0\\n' +\n        '3306/tcp filtered mysql         MySQL 5.7.x\\n'\n\n    case 'webapp':\n      return baseOutput +\n        '200   /admin           Admin Panel\\n' +\n        '200   /api            API Documentation\\n' +\n        '403   /config         Forbidden\\n' +\n        '200   /login          Login Page\\n'\n\n    case 'crypto':\n      return baseOutput +\n        'Testing SSL/TLS on target...\\n' +\n        'Supported Protocols:\\n' +\n        '  TLS 1.2             enabled\\n' +\n        '  TLS 1.3             enabled\\n' +\n        'Certificate Info:\\n' +\n        '  Valid until: 2024-12-31\\n'\n\n    case 'osint':\n      return baseOutput +\n        'Found email addresses:\\n' +\n        '  admin@target.com\\n' +\n        '  support@target.com\\n' +\n        'Found subdomains:\\n' +\n        '  api.target.com\\n' +\n        '  dev.target.com\\n'\n\n    case 'wireless':\n      return baseOutput +\n        'Detected wireless networks:\\n' +\n        'SSID          Signal    Security\\n' +\n        'Network_1     70%       WPA2\\n' +\n        'Network_2     55%       WPA3\\n'\n\n    case 'infrastructure':\n      return baseOutput +\n        'AWS Resources Found:\\n' +\n        '- S3 Buckets: 3\\n' +\n        '- EC2 Instances: 2\\n' +\n        '- Lambda Functions: 5\\n'\n\n    default:\n      return baseOutput + 'Scan completed successfully.'\n  }\n}\n\nexport async function validateTarget(target: string): Promise<boolean> {\n  // Basic validation for IP addresses and domain names\n  const ipRegex = /^(\\d{1,3}\\.){3}\\d{1,3}$/\n  const domainRegex = /^[a-zA-Z0-9][a-zA-Z0-9-]{1,61}[a-zA-Z0-9]\\.[a-zA-Z]{2,}$/\n  \n  return ipRegex.test(target) || domainRegex.test(target)\n}\n\nexport async function getScanHistory(target: string): Promise<ReconResult[]> {\n  // In a real implementation, this would fetch from a database\n  return []\n}\n\nexport async function getToolConfig(toolName: string): Promise<ToolConfig | undefined> {\n  return toolConfigs[toolName]\n}\n\nexport async function getAllTools(): Promise<ToolConfig[]> {\n  return Object.values(toolConfigs)\n}\n"],"names":[],"mappings":";;;;;;;AAEA,MAAM,cAA0C;IAC9C,MAAM;QACJ,MAAM;QACN,SAAS;QACT,MAAM;YAAC;YAAO;SAAM;QACpB,aAAa;QACb,UAAU;IACZ;IACA,WAAW;QACT,MAAM;QACN,SAAS;QACT,MAAM;YAAC;YAAM;SAAc;QAC3B,aAAa;QACb,UAAU;IACZ;IACA,SAAS;QACP,MAAM;QACN,SAAS;QACT,MAAM;YAAC;SAAc;QACrB,aAAa;QACb,UAAU;IACZ;IACA,cAAc;QACZ,MAAM;QACN,SAAS;QACT,MAAM;YAAC;YAAM;SAAM;QACnB,aAAa;QACb,UAAU;IACZ;IACA,YAAY;QACV,MAAM;QACN,SAAS;QACT,MAAM,EAAE;QACR,aAAa;QACb,UAAU;IACZ;IACA,SAAS;QACP,MAAM;QACN,SAAS;QACT,MAAM;YAAC;SAAiB;QACxB,aAAa;QACb,UAAU;IACZ;AACF;AAEO,eAAe,iBACpB,QAAgB,EAChB,OAAoB;IAEpB,MAAM,SAAS,WAAW,CAAC,SAAS;IACpC,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE,SAAS,UAAU,CAAC;IAC9C;IAEA,IAAI;QACF,8BAA8B;QAC9B,IAAI,CAAC,MAAM,eAAe,QAAQ,MAAM,GAAG;YACzC,MAAM,IAAI,MAAM;QAClB;QAEA,kEAAkE;QAClE,+EAA+E;QAC/E,MAAM,SAAsB;YAC1B,QAAQ;YACR,QAAQ,MAAM,mBAAmB,QAAQ;YACzC,WAAW,IAAI,OAAO,WAAW;QACnC;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,OAAO;YACL,QAAQ;YACR,QAAQ,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YACjD,WAAW,IAAI,OAAO,WAAW;QACnC;IACF;AACF;AAEA,eAAe,mBAAmB,MAAkB,EAAE,OAAoB;IACxE,MAAM,aAAa,CAAC,QAAQ,EAAE,OAAO,IAAI,CAAC,SAAS,EAAE,QAAQ,MAAM,CAAC,EAAE,CAAC,GACrD,CAAC,SAAS,EAAE,OAAO,OAAO,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,QAAQ,MAAM,CAAC,IAAI,CAAC;IAE7F,oDAAoD;IACpD,OAAQ,OAAO,QAAQ;QACrB,KAAK;YACH,OAAO,aACL,8CACA,oDACA,mDACA,mDACA;QAEJ,KAAK;YACH,OAAO,aACL,yCACA,8CACA,sCACA;QAEJ,KAAK;YACH,OAAO,aACL,mCACA,2BACA,oCACA,oCACA,wBACA;QAEJ,KAAK;YACH,OAAO,aACL,6BACA,yBACA,2BACA,wBACA,uBACA;QAEJ,KAAK;YACH,OAAO,aACL,kCACA,uCACA,mCACA;QAEJ,KAAK;YACH,OAAO,aACL,2BACA,sBACA,yBACA;QAEJ;YACE,OAAO,aAAa;IACxB;AACF;AAEO,eAAe,eAAe,MAAc;IACjD,qDAAqD;IACrD,MAAM,UAAU;IAChB,MAAM,cAAc;IAEpB,OAAO,QAAQ,IAAI,CAAC,WAAW,YAAY,IAAI,CAAC;AAClD;AAEO,eAAe,eAAe,MAAc;IACjD,6DAA6D;IAC7D,OAAO,EAAE;AACX;AAEO,eAAe,cAAc,QAAgB;IAClD,OAAO,WAAW,CAAC,SAAS;AAC9B;AAEO,eAAe;IACpB,OAAO,OAAO,MAAM,CAAC;AACvB","debugId":null}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ScanModal.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { executeReconTool, validateTarget } from '@/services/reconService'\nimport { ReconResult, ScanOptions } from '@/types/recon'\n\ninterface ScanModalProps {\n  toolName: string\n  isOpen: boolean\n  onClose: () => void\n}\n\nexport function ScanModal({ toolName, isOpen, onClose }: ScanModalProps) {\n  const [target, setTarget] = useState('')\n  const [intensity, setIntensity] = useState<'low' | 'medium' | 'high'>('medium')\n  const [isScanning, setIsScanning] = useState(false)\n  const [result, setResult] = useState<ReconResult | null>(null)\n  const [error, setError] = useState('')\n\n  if (!isOpen) return null\n\n  const handleScan = async () => {\n    setError('')\n    setResult(null)\n    \n    try {\n      // Validate target\n      const isValid = await validateTarget(target)\n      if (!isValid) {\n        setError('Invalid target specified. Please enter a valid IP address or domain.')\n        return\n      }\n\n      setIsScanning(true)\n      const options: ScanOptions = {\n        target,\n        intensity,\n        timeout: intensity === 'low' ? 30 : intensity === 'medium' ? 60 : 120\n      }\n\n      const scanResult = await executeReconTool(toolName, options)\n      setResult(scanResult)\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An error occurred during the scan')\n    } finally {\n      setIsScanning(false)\n    }\n  }\n\n  return (\n    <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center\">\n      <div className=\"bg-gray-900 border border-green-500/20 rounded-lg p-6 max-w-2xl w-full mx-4 shadow-xl\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-mono text-green-400\">Launch {toolName}</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-green-500 transition-colors\"\n          >\n            âœ•\n          </button>\n        </div>\n\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-mono text-gray-400 mb-1\">\n              Target (IP or Domain)\n            </label>\n            <input\n              type=\"text\"\n              value={target}\n              onChange={(e) => setTarget(e.target.value)}\n              placeholder=\"example.com or 192.168.1.1\"\n              className=\"w-full px-4 py-2 bg-gray-800/50 border border-green-500/20 rounded-lg text-gray-100 placeholder-gray-500 focus:outline-none focus:border-green-500/50\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-mono text-gray-400 mb-1\">\n              Scan Intensity\n            </label>\n            <div className=\"flex gap-4\">\n              {(['low', 'medium', 'high'] as const).map((level) => (\n                <button\n                  key={level}\n                  onClick={() => setIntensity(level)}\n                  className={`px-4 py-2 rounded-lg font-mono capitalize ${\n                    intensity === level\n                      ? 'bg-green-500/20 text-green-400 border border-green-500/20'\n                      : 'bg-gray-800/50 text-gray-400 border border-transparent hover:border-green-500/20'\n                  }`}\n                >\n                  {level}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"text-red-400 bg-red-500/10 border border-red-500/20 rounded-lg p-4 font-mono\">\n              {error}\n            </div>\n          )}\n\n          {result && (\n            <div className=\"bg-gray-800/50 border border-green-500/20 rounded-lg p-4\">\n              <pre className=\"font-mono text-sm text-gray-300 whitespace-pre-wrap\">\n                {result.output}\n              </pre>\n            </div>\n          )}\n\n          <div className=\"flex justify-end gap-4 mt-6\">\n            <button\n              onClick={onClose}\n              className=\"px-4 py-2 text-gray-400 hover:text-green-500 transition-colors font-mono\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={handleScan}\n              disabled={isScanning || !target}\n              className={`px-6 py-2 bg-green-500/10 text-green-400 rounded-lg font-mono border border-green-500/20 \n                ${isScanning || !target \n                  ? 'opacity-50 cursor-not-allowed' \n                  : 'hover:bg-green-500/20 transition-all'\n                }`}\n            >\n              {isScanning ? 'Scanning...' : 'Launch Scan'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAYO,SAAS,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAkB;;IACrE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA6B;IACtE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB;IACzD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,IAAI,CAAC,QAAQ,OAAO;IAEpB,MAAM,aAAa;QACjB,SAAS;QACT,UAAU;QAEV,IAAI;YACF,kBAAkB;YAClB,MAAM,UAAU,MAAM,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;YACrC,IAAI,CAAC,SAAS;gBACZ,SAAS;gBACT;YACF;YAEA,cAAc;YACd,MAAM,UAAuB;gBAC3B;gBACA;gBACA,SAAS,cAAc,QAAQ,KAAK,cAAc,WAAW,KAAK;YACpE;YAEA,MAAM,aAAa,MAAM,CAAA,GAAA,kIAAA,CAAA,mBAAgB,AAAD,EAAE,UAAU;YACpD,UAAU;QACZ,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,cAAc;QAChB;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;;gCAAoC;gCAAQ;;;;;;;sCAC1D,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;8BAKH,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;;8CACC,6LAAC;oCAAM,WAAU;8CAA6C;;;;;;8CAG9D,6LAAC;oCACC,MAAK;oCACL,OAAO;oCACP,UAAU,CAAC,IAAM,UAAU,EAAE,MAAM,CAAC,KAAK;oCACzC,aAAY;oCACZ,WAAU;;;;;;;;;;;;sCAId,6LAAC;;8CACC,6LAAC;oCAAM,WAAU;8CAA6C;;;;;;8CAG9D,6LAAC;oCAAI,WAAU;8CACZ,AAAC;wCAAC;wCAAO;wCAAU;qCAAO,CAAW,GAAG,CAAC,CAAC,sBACzC,6LAAC;4CAEC,SAAS,IAAM,aAAa;4CAC5B,WAAW,CAAC,0CAA0C,EACpD,cAAc,QACV,8DACA,oFACJ;sDAED;2CARI;;;;;;;;;;;;;;;;wBAcZ,uBACC,6LAAC;4BAAI,WAAU;sCACZ;;;;;;wBAIJ,wBACC,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;0CACZ,OAAO,MAAM;;;;;;;;;;;sCAKpB,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;8CAGD,6LAAC;oCACC,SAAS;oCACT,UAAU,cAAc,CAAC;oCACzB,WAAW,CAAC;gBACV,EAAE,cAAc,CAAC,SACb,kCACA,wCACF;8CAEH,aAAa,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO5C;GA1HgB;KAAA","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ToolCard.tsx"],"sourcesContent":["'use client'\n\ninterface ToolCardProps {\n  id: number\n  title: string\n  description: string\n  tools: string[]\n  features: string[]\n  image: string\n  onLaunch: (toolName: string) => void\n}\n\nexport function ToolCard({ \n  title, \n  description, \n  tools, \n  features, \n  image, \n  onLaunch \n}: ToolCardProps) {\n  return (\n    <div className=\"group bg-gray-800 rounded-lg overflow-hidden hover:shadow-green-500/5 transition-all duration-300 border border-green-500/10 hover:border-green-500/20\">\n      <div className=\"p-12 bg-gray-800/50 group-hover:bg-gray-800/80 transition-colors duration-300\">\n        <img\n          src={image}\n          alt={title}\n          className=\"w-20 h-20 mx-auto opacity-50 group-hover:opacity-75 transition-opacity duration-300 filter invert\"\n        />\n      </div>\n      <div className=\"p-8 text-center\">\n        <h3 className=\"text-2xl font-mono font-semibold mb-3 text-green-400\">{title}</h3>\n        <p className=\"text-gray-400 mb-6 leading-relaxed\">{description}</p>\n        <div className=\"space-y-4\">\n          <div className=\"border-t pt-4\">\n            <p className=\"font-semibold mb-2\">Key Tools:</p>\n            <div className=\"flex flex-wrap gap-2 justify-center\">\n              {tools.map((tool) => (\n                <span key={tool} className=\"px-2 py-1 bg-gray-900/50 rounded-md text-sm text-green-400 font-mono border border-green-500/10\">\n                  {tool}\n                </span>\n              ))}\n            </div>\n          </div>\n          <div>\n            <p className=\"font-semibold mb-2\">Features:</p>\n            <div className=\"flex flex-wrap gap-2 justify-center\">\n              {features.map((feature) => (\n                <span key={feature} className=\"px-2 py-1 bg-gray-900/50 rounded-md text-sm text-gray-300 border border-green-500/10\">\n                  {feature}\n                </span>\n              ))}\n            </div>\n          </div>\n          <button \n            onClick={() => onLaunch(tools[0])}\n            className=\"w-full bg-green-500/10 text-green-400 font-mono font-semibold px-6 py-3 rounded-xl hover:bg-green-500/20 transition-all duration-200 transform hover:scale-[1.02] mt-4 border border-green-500/20\"\n          >\n            Launch Tool\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;;AAYO,SAAS,SAAS,EACvB,KAAK,EACL,WAAW,EACX,KAAK,EACL,QAAQ,EACR,KAAK,EACL,QAAQ,EACM;IACd,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,KAAK;oBACL,KAAK;oBACL,WAAU;;;;;;;;;;;0BAGd,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAwD;;;;;;kCACtE,6LAAC;wBAAE,WAAU;kCAAsC;;;;;;kCACnD,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAE,WAAU;kDAAqB;;;;;;kDAClC,6LAAC;wCAAI,WAAU;kDACZ,MAAM,GAAG,CAAC,CAAC,qBACV,6LAAC;gDAAgB,WAAU;0DACxB;+CADQ;;;;;;;;;;;;;;;;0CAMjB,6LAAC;;kDACC,6LAAC;wCAAE,WAAU;kDAAqB;;;;;;kDAClC,6LAAC;wCAAI,WAAU;kDACZ,SAAS,GAAG,CAAC,CAAC,wBACb,6LAAC;gDAAmB,WAAU;0DAC3B;+CADQ;;;;;;;;;;;;;;;;0CAMjB,6LAAC;gCACC,SAAS,IAAM,SAAS,KAAK,CAAC,EAAE;gCAChC,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;;;AAOX;KAnDgB","debugId":null}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/config/tools.ts"],"sourcesContent":["import { ToolConfig } from \"@/types/recon\"\n\nexport const toolConfigs: Record<string, ToolConfig> = {\n  nmap: {\n    name: 'Nmap',\n    command: 'nmap',\n    args: ['-sV', '-sC'],\n    description: 'Network scanning and service detection',\n    category: 'network'\n  },\n  dirsearch: {\n    name: 'Dirsearch',\n    command: 'dirsearch',\n    args: ['-e', 'php,html,js'],\n    description: 'Web path scanner',\n    category: 'webapp'\n  },\n  sslscan: {\n    name: 'SSLScan',\n    command: 'sslscan',\n    args: ['--no-colour'],\n    description: 'SSL/TLS scanner',\n    category: 'crypto'\n  },\n  theHarvester: {\n    name: 'TheHarvester',\n    command: 'theHarvester',\n    args: ['-b', 'all'],\n    description: 'Email and subdomain harvester',\n    category: 'osint'\n  },\n  aircrackng: {\n    name: 'Aircrack-ng',\n    command: 'aircrack-ng',\n    args: [],\n    description: 'Wireless network analyzer',\n    category: 'wireless'\n  },\n  awsEnum: {\n    name: 'AWS Enumerator',\n    command: 'aws',\n    args: ['--list-buckets'],\n    description: 'AWS infrastructure scanner',\n    category: 'infrastructure'\n  }\n}\n\nexport const getToolConfig = (toolName: string): ToolConfig | undefined => {\n  return toolConfigs[toolName]\n}\n\nexport const getAllTools = (): ToolConfig[] => {\n  return Object.values(toolConfigs)\n}\n"],"names":[],"mappings":";;;;;AAEO,MAAM,cAA0C;IACrD,MAAM;QACJ,MAAM;QACN,SAAS;QACT,MAAM;YAAC;YAAO;SAAM;QACpB,aAAa;QACb,UAAU;IACZ;IACA,WAAW;QACT,MAAM;QACN,SAAS;QACT,MAAM;YAAC;YAAM;SAAc;QAC3B,aAAa;QACb,UAAU;IACZ;IACA,SAAS;QACP,MAAM;QACN,SAAS;QACT,MAAM;YAAC;SAAc;QACrB,aAAa;QACb,UAAU;IACZ;IACA,cAAc;QACZ,MAAM;QACN,SAAS;QACT,MAAM;YAAC;YAAM;SAAM;QACnB,aAAa;QACb,UAAU;IACZ;IACA,YAAY;QACV,MAAM;QACN,SAAS;QACT,MAAM,EAAE;QACR,aAAa;QACb,UAAU;IACZ;IACA,SAAS;QACP,MAAM;QACN,SAAS;QACT,MAAM;YAAC;SAAiB;QACxB,aAAa;QACb,UAAU;IACZ;AACF;AAEO,MAAM,gBAAgB,CAAC;IAC5B,OAAO,WAAW,CAAC,SAAS;AAC9B;AAEO,MAAM,cAAc;IACzB,OAAO,OAAO,MAAM,CAAC;AACvB","debugId":null}},
    {"offset": {"line": 596, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from \"react\"\nimport { ScanModal } from \"@/components/ScanModal\"\nimport { ToolCard } from \"@/components/ToolCard\"\nimport { getAllTools } from \"@/config/tools\"\nimport type { ToolConfig } from \"@/types/recon\"\n\nconst getCategoryIcon = (category: string) => {\n  switch (category) {\n    case 'network':\n      return '/network.svg'\n    case 'webapp':\n      return '/window.svg'\n    case 'crypto':\n      return '/lock.svg'\n    case 'osint':\n      return '/globe.svg'\n    case 'wireless':\n      return '/network.svg'\n    case 'infrastructure':\n      return '/window.svg'\n    default:\n      return '/file.svg'\n  }\n}\n\nconst tools = getAllTools()\nconst recommendations = tools.map((tool, index) => ({\n  id: index + 1,\n  title: tool.name,\n  description: tool.description,\n  image: getCategoryIcon(tool.category),\n  category: tool.category,\n  tools: [tool.name],\n  features: tool.args.map(arg => arg.replace('-', ''))\n}))\n\nexport default function Home() {\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null)\n  const [filteredRecommendations, setFilteredRecommendations] = useState(recommendations)\n  const [selectedTool, setSelectedTool] = useState<string | null>(null)\n\n  const categories = Array.from(new Set(recommendations.map(rec => rec.category)))\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const term = e.target.value.toLowerCase()\n    setSearchTerm(term)\n    filterRecommendations(term, selectedCategory)\n  }\n\n  const handleCategorySelect = (category: string | null) => {\n    setSelectedCategory(category)\n    filterRecommendations(searchTerm, category)\n  }\n\n  const filterRecommendations = (term: string, category: string | null) => {\n    const filtered = recommendations.filter(rec => {\n      const matchesTerm = rec.title.toLowerCase().includes(term) || \n                         rec.description.toLowerCase().includes(term)\n      const matchesCategory = !category || rec.category === category\n      return matchesTerm && matchesCategory\n    })\n    setFilteredRecommendations(filtered)\n  }\n\n  return (\n    <main className=\"min-h-screen bg-gray-900\">\n      {/* Hero Section */}\n      <section className=\"py-24 bg-gradient-to-b from-gray-900 to-gray-800\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"relative\">\n            <div className=\"absolute inset-0 flex items-center justify-center opacity-10\">\n              <div className=\"text-[12rem] font-mono text-green-500\">{`[>_]`}</div>\n            </div>\n            <h1 className=\"text-4xl md:text-6xl font-bold text-center text-gray-100 mb-6 relative\">\n              Automation <span className=\"text-green-500 font-mono\">[Recon]</span>\n            </h1>\n          </div>\n          <p className=\"text-xl text-center text-gray-400 mb-12 max-w-2xl mx-auto\">\n            Advanced penetration testing reconnaissance toolkit for comprehensive security assessments\n          </p>\n          <div className=\"max-w-2xl mx-auto relative space-y-6\">\n            {/* Search Input */}\n            <div className=\"relative mb-6\">\n              <svg\n                className=\"absolute left-6 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                />\n              </svg>\n              <input\n                type=\"text\"\n                placeholder=\"Search recommendations...\"\n                value={searchTerm}\n                onChange={handleSearch}\n                className=\"w-full mb-6 pl-14 pr-6 py-4 border-2 border-green-500/20 bg-gray-800/50 rounded-2xl focus:outline-none focus:ring-2 focus:ring-green-500/20 shadow-sm transition-all duration-200 hover:shadow-green-500/5 text-gray-100 placeholder-gray-500 font-mono\"\n              />\n            </div>\n            {/* Category Filter */}\n            <div className=\"flex flex-wrap justify-center gap-3 mb-8\">\n              <button\n                onClick={() => handleCategorySelect(null)}\n                className={`px-4 py-2 rounded-lg transition-all ${\n                  !selectedCategory \n                    ? 'bg-green-500 text-gray-900' \n                    : 'bg-gray-800 text-gray-400 hover:bg-gray-700'\n                }`}\n              >\n                All\n              </button>\n              {categories.map((category) => (\n                <button\n                  key={category}\n                  onClick={() => handleCategorySelect(category)}\n                  className={`px-4 py-2 rounded-lg capitalize transition-all ${\n                    selectedCategory === category \n                      ? 'bg-green-500 text-gray-900' \n                      : 'bg-gray-800 text-gray-400 hover:bg-gray-700'\n                  }`}\n                >\n                  {category}\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Tools Grid */}\n      <section className=\"py-16\">\n        <div className=\"container mx-auto px-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {filteredRecommendations.map((rec) => (\n              <ToolCard\n                key={rec.id}\n                {...rec}\n                onLaunch={setSelectedTool}\n              />\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-24 bg-gradient-to-b from-gray-800 to-gray-900\">\n        <div className=\"container mx-auto px-4 text-center\">\n          <h2 className=\"text-4xl font-bold mb-6\">Start Reconnaissance</h2>\n          <p className=\"text-xl text-gray-400 mb-10 max-w-2xl mx-auto\">\n            Launch sophisticated reconnaissance operations with our advanced pentesting toolkit\n          </p>\n          <button className=\"group bg-green-500/10 text-green-400 font-mono font-semibold px-8 py-4 rounded-xl hover:bg-green-500/20 transition-all duration-200 transform hover:scale-[1.02] shadow-lg border border-green-500/20\">\n            <span className=\"group-hover:hidden\">[</span>\n            Get Started\n            <span className=\"group-hover:hidden\">]</span>\n          </button>\n        </div>\n      </section>\n\n      {/* Scan Modal */}\n      {selectedTool && (\n        <ScanModal\n          toolName={selectedTool}\n          isOpen={!!selectedTool}\n          onClose={() => setSelectedTool(null)}\n        />\n      )}\n    </main>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}